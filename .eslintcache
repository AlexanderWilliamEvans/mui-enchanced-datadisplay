[{"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\index.js":"1","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Buttonpanel\\Export\\ExportButton.js":"2","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\App.js":"3","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Querybar\\ButtonPanel\\Delete\\DeleteButton.js":"4","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\reducers\\index.ts":"5","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\RangeSlider\\CustomSlider.ts":"6","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\RadioButtonGroup\\RadioButtonGroup.tsx":"7","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\BasicExample.tsx":"8","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\StatisticsExample.tsx":"9","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\reducers\\currentData.ts":"10","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\reducers\\counter.ts":"11","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\api.ts":"12","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\actions\\index.ts":"13","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\datahandler\\import\\importButton.tsx":"14","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\Delete\\DeleteButton.js":"15","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\datahandler\\export\\exportButton.tsx":"16","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\statistics\\charts\\piechart\\simple.tsx":"17","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\actions\\dataActions.ts":"18","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\ButtonPanel.js":"19","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\Update\\UpdateButton.js":"20","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\assets\\Dialogs\\Details.tsx":"21","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Querybar.tsx":"22","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\statistics\\charts\\barchart\\simple.tsx":"23","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\actions\\counterActions.ts":"24","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\ChipList\\ChipList.tsx":"25","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\functions.ts":"26","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\FilterMenu.tsx":"27","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\RangeSlider\\RangeSlider.tsx":"28","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\Export\\ExportButton.js":"29","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\ChipList\\Hierarchical.tsx":"30","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\reportWebVitals.js":"31","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\datahandler\\create\\createButton.tsx":"32","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\DraggableTable.tsx":"33","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\DraggableExample.tsx":"34","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Footer\\Footer.js":"35","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\pages\\Home\\CardLink.tsx":"36","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\Switch\\Switch.tsx":"37","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Navbar\\Navbar.tsx":"38","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Navbar\\Router.tsx":"39","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\EditableTable.js":"40","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\pages\\Home\\Home.tsx":"41","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\EditableExample.tsx":"42","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\BasicTable.tsx":"43","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\settings.ts":"44","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\index.tsx":"45"},{"size":500,"mtime":1609317211589,"results":"46","hashOfConfig":"47"},{"size":3130,"mtime":1611318179960,"results":"48","hashOfConfig":"49"},{"size":569,"mtime":1616508939453,"results":"50","hashOfConfig":"47"},{"size":835,"mtime":1612334804784,"results":"51","hashOfConfig":"49"},{"size":276,"mtime":1625943447224,"results":"52","hashOfConfig":"47"},{"size":1364,"mtime":1613554294530,"results":"53","hashOfConfig":"47"},{"size":1743,"mtime":1616669975050,"results":"54","hashOfConfig":"47"},{"size":1940,"mtime":1625942711490,"results":"55","hashOfConfig":"47"},{"size":2715,"mtime":1623353402698,"results":"56","hashOfConfig":"47"},{"size":410,"mtime":1616508939477,"results":"57","hashOfConfig":"47"},{"size":265,"mtime":1616508939476,"results":"58","hashOfConfig":"47"},{"size":883,"mtime":1616508939453,"results":"59","hashOfConfig":"47"},{"size":180,"mtime":1616508939475,"results":"60","hashOfConfig":"47"},{"size":1978,"mtime":1616508939457,"results":"61","hashOfConfig":"47"},{"size":835,"mtime":1612334804784,"results":"62","hashOfConfig":"47"},{"size":810,"mtime":1616508939456,"results":"63","hashOfConfig":"47"},{"size":1564,"mtime":1623334033660,"results":"64","hashOfConfig":"47"},{"size":245,"mtime":1616508939474,"results":"65","hashOfConfig":"47"},{"size":968,"mtime":1614256732516,"results":"66","hashOfConfig":"47"},{"size":860,"mtime":1612334804785,"results":"67","hashOfConfig":"47"},{"size":4481,"mtime":1625931709407,"results":"68","hashOfConfig":"47"},{"size":15912,"mtime":1616669632286,"results":"69","hashOfConfig":"47"},{"size":1548,"mtime":1623332282725,"results":"70","hashOfConfig":"47"},{"size":210,"mtime":1616508939473,"results":"71","hashOfConfig":"47"},{"size":4381,"mtime":1625943711359,"results":"72","hashOfConfig":"47"},{"size":313,"mtime":1622117092968,"results":"73","hashOfConfig":"47"},{"size":9855,"mtime":1622811226859,"results":"74","hashOfConfig":"47"},{"size":5240,"mtime":1616508939464,"results":"75","hashOfConfig":"47"},{"size":788,"mtime":1614256564101,"results":"76","hashOfConfig":"47"},{"size":4941,"mtime":1622811377590,"results":"77","hashOfConfig":"47"},{"size":362,"mtime":1609317211589,"results":"78","hashOfConfig":"47"},{"size":1888,"mtime":1623756644002,"results":"79","hashOfConfig":"47"},{"size":7289,"mtime":1626018467612,"results":"80","hashOfConfig":"47"},{"size":2093,"mtime":1626018614397,"results":"81","hashOfConfig":"47"},{"size":1419,"mtime":1610023648023,"results":"82","hashOfConfig":"47"},{"size":1644,"mtime":1623394151909,"results":"83","hashOfConfig":"47"},{"size":2360,"mtime":1613480720754,"results":"84","hashOfConfig":"47"},{"size":4384,"mtime":1623668256699,"results":"85","hashOfConfig":"47"},{"size":1316,"mtime":1623757690975,"results":"86","hashOfConfig":"47"},{"size":6183,"mtime":1625687069858,"results":"87","hashOfConfig":"47"},{"size":3467,"mtime":1625943583824,"results":"88","hashOfConfig":"47"},{"size":1905,"mtime":1625465951944,"results":"89","hashOfConfig":"47"},{"size":4342,"mtime":1625943905890,"results":"90","hashOfConfig":"47"},{"size":2728,"mtime":1623661194051,"results":"91","hashOfConfig":"47"},{"size":2602,"mtime":1626011095239,"results":"92","hashOfConfig":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"frvcfz",{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1g00r6c",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"95"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"95"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\index.js",[],["220","221"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Buttonpanel\\Export\\ExportButton.js",["222","223","224","225","226"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\App.js",[],["227","228"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Querybar\\ButtonPanel\\Delete\\DeleteButton.js",["229"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\RangeSlider\\CustomSlider.ts",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\RadioButtonGroup\\RadioButtonGroup.tsx",["230"],"import React, { useState, useEffect, ChangeEvent } from \"react\";\r\nimport {\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    Radio,\r\n    RadioGroup\r\n} from \"@material-ui/core\";\r\nimport { RadioButtonGroupTypes } from \"../../../types/RadioButtonGroup.types\";\r\n\r\n\r\nconst RadioButtonGroup = (props: RadioButtonGroupTypes) => {\r\n    const label = props.label || '';\r\n    const type = props.type || 'radio';\r\n    const name = props.name || '';\r\n    const values = props.data.values || [];\r\n    const [selectedValue, setSelectedValue] = useState('all');\r\n\r\n    const handleFilter = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = (e.target as HTMLInputElement).value;\r\n        setSelectedValue(target);\r\n        const query = { filter: target, type, name }\r\n        props.handleFilter(query, 'filter');\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [values, selectedValue]);\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">{label}</FormLabel>\r\n            <RadioGroup aria-label={Array.isArray(name) ? name.join() : name} name={Array.isArray(name) ? name.join() : name} value={selectedValue} onChange={(e) => handleFilter(e)}>\r\n                <FormControlLabel value=\"all\" control={<Radio color=\"primary\" />} label=\"Alla\" />\r\n                {\r\n                    values.map((value: any, index: string) => {\r\n                        return (\r\n                            <FormControlLabel key={`${value.label}-${index}`} value={value.value} control={<Radio color=\"primary\" />} label={value.label} />\r\n                        )\r\n                    })\r\n                }\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n\r\n};\r\nexport default RadioButtonGroup;",["231","232"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\BasicExample.tsx",["233","234"],"import React from 'react';\r\nimport { makeStyles, Container, Typography } from '@material-ui/core';\r\nimport Table from \"../tables/index\";\r\nimport Querybar from '../querybar/Querybar';\r\nimport settings from './settings';\r\nimport {useSelector } from 'react-redux';\r\nimport allActions from '../../redux/actions/index';\r\n\r\n\r\nconst placeholder = 'Search...';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginTop: '1em',\r\n        minHeight: '82vh'\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst BasicExample = () => {\r\n    const classes = useStyles();\r\n    const currentData = useSelector((state:any) => state.currentData)\r\n    const [rows, setRows] = React.useState(currentData.data);\r\n    const [data, setData] = React.useState(currentData.data);\r\n    const headers = Object.keys(currentData.data[0]);\r\n    debugger;\r\n    const updateData = () => {\r\n        return currentData.data;\r\n    };\r\n\r\n    const handleDelete = () =>{\r\n\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        console.log(rows);\r\n    }, [rows]);\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Typography>A Simple Example</Typography>\r\n            <br />\r\n            <Querybar\r\n                headers={settings.headers}\r\n                sort={settings.sort}\r\n                data={data}\r\n                updateData={updateData}\r\n                filters={settings.filters}\r\n                setData={setRows}\r\n                placeholder={placeholder}\r\n                useSort={settings.useSort || true} \r\n                showSearchResultText={settings.showSearchResultText || true}\r\n                showDelete={true}\r\n                handleDelete={handleDelete}\r\n                />\r\n            <Table\r\n                title={\"name\"}\r\n                headers={headers}\r\n                data={rows}\r\n                updateData={setRows} />\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default BasicExample;",["235","236"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\StatisticsExample.tsx",["237","238","239","240","241","242","243","244","245","246","247"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Container, Typography, Grid } from '@material-ui/core';\r\nimport Querybar from '../querybar/Querybar';\r\nimport { useSelector } from 'react-redux';\r\nimport allActions from '../../redux/actions/index';\r\nimport BasicPieChart from '../statistics/charts/piechart/simple';\r\nimport BasicBarChart from \"../statistics/charts/barchart/simple\";\r\nimport ImportButton from \"../datahandler/import/importButton\";\r\nimport ExportButton from \"../datahandler/export/exportButton\";\r\nimport CreateButton from \"../datahandler/create/createButton\";\r\n\r\nconst placeholder = 'Search...';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginTop: '1em',\r\n        minHeight: '82vh'\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst BasicExample = () => {\r\n    const classes = useStyles();\r\n    const currentData = useSelector((state: any) => state.currentData)\r\n    const [rows, setRows] = useState(currentData.data);\r\n    const [data, setData] = useState(currentData.data);\r\n    const updateData = () => {\r\n        return currentData.data;\r\n    };\r\n\r\n    const handleDelete = () => {\r\n\r\n    };\r\n\r\n    const pieChartProps = {\r\n        label: \"Test Example\",\r\n        data: [\r\n            { name: \"Group A\", value: 400, color: \"#0088FE\" },\r\n            { name: \"Group B\", value: 300, color: \"#00C49F\" },\r\n            { name: \"Group C\", value: 300, color: \"#FFBB28\" },\r\n            { name: \"Group D\", value: 200, color: \"#FF8042\" },\r\n        ]\r\n    };\r\n\r\n    const lineChartProps = {\r\n        label: \"GDP (PPP) per capita in 1990 International Dollars\",\r\n        data: [\r\n            {\r\n                country: \"Austria\",\r\n                value: 425,\r\n            },\r\n            {\r\n                country: \"Belgium\",\r\n                value: 450,\r\n            },\r\n            {\r\n                country: \"Denmark\",\r\n                value: 400,\r\n            }\r\n        ]\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [rows]);\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <ImportButton />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <ExportButton />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <CreateButton />\r\n                </Grid>\r\n                <Grid xs={12}>\r\n                    <BasicPieChart {...pieChartProps} />\r\n                </Grid>\r\n                {/* <Grid item xs={6}>\r\n                    <BasicBarChart />\r\n                </Grid> */}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default BasicExample;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\reducers\\currentData.ts",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\reducers\\counter.ts",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\api.ts",["248"],"import Axios from \"axios\";\r\n\r\nconst baseUrl = \"https://www.breakingbadapi.com/api\";\r\nconst getData = async () => {\r\n    try {\r\n        const request = await Axios.get(`${baseUrl}/characters`);\r\n        if (request.status === 200) {\r\n            return request.data;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    } catch (e) {\r\n        console.error(`Following error occured: ${e}`);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst getDataById = async(id:string | number) => {\r\n    try {\r\n        const request = await Axios.get(`${baseUrl}/characters/${id}`);\r\n        if (request.status === 200) {\r\n            return request.data;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    } catch(e) {\r\n        console.error(`Following error occured: ${e}`);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default ({\r\n    getData,\r\n    getDataById,\r\n});","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\actions\\index.ts",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\datahandler\\import\\importButton.tsx",["249","250","251"],"import React, { Fragment, useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\n\r\ninterface props {\r\n    label?: string;\r\n    allowedFiletypes?: Array<string>;\r\n};\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n    },\r\n    input: {\r\n        visibility:\"hidden\"\r\n    }\r\n}));\r\nconst ImportButton = (props: props) => {\r\n    const classes = useStyles();\r\n\r\n    const uploadData = (file:any) => {\r\n        switch (file) {\r\n            case \"csv\" || \"xls\":\r\n                let lines = file.split(\"\\n\");\r\n\r\n                const result = [];\r\n\r\n                const headers = lines[0].split(\",\");\r\n\r\n                for (let i = 1; i < lines.length; i++) {\r\n\r\n                    let obj: any = {};\r\n                    let currentline = lines[i].split(\",\");\r\n\r\n                    for (let j = 0; j < headers.length; j++) {\r\n                        obj[headers[j]] = currentline[j];\r\n                    }\r\n\r\n                    result.push(obj);\r\n\r\n                }\r\n                return JSON.stringify(result);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"raised-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<BackupIcon />}\r\n                component=\"span\" \r\n                className={classes.button}>\r\n                    {props.label || \"Import Data\"}\r\n                </Button>\r\n            </label>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default ImportButton;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\Delete\\DeleteButton.js",["252"],"import React, {useState, useEffect} from 'react';\r\nimport { makeStyles, Grow, Tooltip, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n    deleteButton: {\r\n        float: 'left',\r\n        paddingLeft: '3px'\r\n    },\r\n\r\n}));\r\nconst DeleteButton = (props) => {\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n    return (\r\n        <Grow in={true} timeout={500}>\r\n        <Tooltip title=\"Ta bort valda rader\">\r\n            <IconButton\r\n                className={classes.deleteButton}\r\n                color=\"secondary\"\r\n                onClick={() => props.handleDelete()}\r\n            >\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </Tooltip>\r\n    </Grow>\r\n    );\r\n};\r\nexport default DeleteButton;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\datahandler\\export\\exportButton.tsx",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\statistics\\charts\\piechart\\simple.tsx",["253","254","255"],"import { Divider, Typography } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\nimport { basicStatisticsTypes } from \"../../types/types\";\r\n\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index\r\n}: any) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport const BasicPieChart = (props: basicStatisticsTypes) => {\r\n\r\n  const [ data, setData ] = React.useState<any>(props.data || []);\r\n  debugger;\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h5\">{props.label || \"\"}</Typography>\r\n      <Divider />\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          labelLine={false}\r\n          label={renderCustomizedLabel}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n        >\r\n          {data.map((entry:any, index:number) => (\r\n            <Cell key={`cell-${index}`} fill={entry.color} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default BasicPieChart;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\actions\\dataActions.ts",["256"],"const setData = (userObj:any) => {\r\n    return {\r\n        type: \"SET_DATA\",\r\n        payload: userObj\r\n    }\r\n}\r\n\r\nconst clearData = () => {\r\n    return {\r\n        type: \"CLEAR_DATA\"\r\n    }\r\n}\r\n\r\nexport default {\r\n    setData,\r\n    clearData,\r\n}","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\ButtonPanel.js",["257","258","259","260"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DeleteButton from './Delete/DeleteButton';\r\nimport ExportButton from './Export/ExportButton';\r\nimport UpdateButton from './Update/UpdateButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonGroup: {\r\n        padding: theme.spacing(1),\r\n        borderBottom: '1px solid #ccc',\r\n        height: '75px'\r\n    },\r\n}));\r\n\r\nconst ButtonPanel = (props) => {\r\n    const classes = useStyles();\r\n    const showDelete = props.showDelete || true;\r\n    useEffect(() => {\r\n\r\n    }, [JSON.stringify(props)]);\r\n\r\n    return (\r\n        <div className={classes.buttonGroup}>\r\n            <UpdateButton updateData={props.updateData} />\r\n            {\r\n                props.headers !== null && props.headers !== undefined ?\r\n                <ExportButton exportData={props.exportData}  /> : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default ButtonPanel;",["261","262"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\Update\\UpdateButton.js",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\assets\\Dialogs\\Details.tsx",["263"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Querybar.tsx",["264","265","266","267","268","269","270"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport {\r\n  IconButton, AppBar, Typography, InputBase, Toolbar, Tooltip, Collapse,\r\n  FormControl, NativeSelect, InputLabel,\r\n} from '@material-ui/core';\r\nimport { createStyles, fade, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterMenu from './Filter/FilterMenu';\r\nimport ButtonPanel from './ButtonPanel/ButtonPanel';\r\nimport { QuerybarTypes } from './types/Querybar.types';\r\nimport { IQueryObject } from './interfaces/IQueryObject';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  filler: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    width: '150px',\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) => createStyles({\r\n\r\n  input: {\r\n    minWidth: '100px',\r\n    width: 'auto',\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\n/**\r\n     * Summary: A querybar for search, filter and CRUD-operations for a given data.\r\n     *\r\n     * Description. (use period)\r\n     *\r\n     * @since      x.x.x\r\n     * @access     private\r\n     *\r\n     * @constructs namespace.Class\r\n     * @augments   Parent\r\n     * @mixes      mixin\r\n     *\r\n     * @alias    Querybar\r\n     * @memberof namespace\r\n     *\r\n     * @see   Function/class relied on\r\n     * @link  URL\r\n     * @fires Class#eventName\r\n     *\r\n     * @param {Object} attributes     The model's attributes.\r\n     * @param {type}   attributes.key One of the model's attributes.\r\n     * @param {Object} [options]      The model's options.\r\n     * @param {type}   attributes.key One of the model's options.\r\n     */\r\n\r\nconst Querybar = (props: QuerybarTypes) => {\r\n\r\n  const classes = useStyles();\r\n  const data = props.data || [];\r\n  const headers = props.headers || null;\r\n  const showSearchResultText = props.showSearchResultText || false;\r\n  const [displayedData, setDisplayedData] = useState(props.data || []);\r\n  const displayedDataRef = useRef<any[]>([]);\r\n  const [dataQuery, setDataQuery] = useState<any>([]);\r\n  const [filter, setFilter] = useState<any>([]);\r\n  const [sort, setSort] = useState<string>('sortera');\r\n  const sortOptions = props.sort || [];\r\n  const [search, setSearch] = useState<string>('');\r\n  const [collapseFilter, setCollapseFilter] = useState<boolean>(false);\r\n\r\n  const handleQuery = (e: any, type: string) => {\r\n    const query = e.target !== undefined ? e.target.value : e;\r\n    let test = JSON.parse(JSON.stringify(data));\r\n    if (data.length > 0) {\r\n      if (type === 'sort' || sort.length > 0) {\r\n        test = handleSort(type === 'sort' ? JSON.parse(query) : sort, test);\r\n      }\r\n\r\n      if (type === 'filter' || filter.length > 0) {\r\n        if (type === 'filter') {\r\n          for (let i = 0; i < query.length; i++) {\r\n            test = handleFilter(query[i], test);\r\n          }\r\n          setFilter(query);\r\n        }\r\n        else {\r\n          for (let i = 0; i < filter.length; i++) {\r\n            test = handleFilter(filter[i], test);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (type === 'search' || search.length > 0) {\r\n        test = handleSearch(type === 'search' ? query : search, test);\r\n      }\r\n      setDataQuery(test);\r\n      setDisplayedData(test);\r\n    }\r\n\r\n  };\r\n  const handleSort = (param: any, data: Array<any>) => {\r\n    let result;\r\n    if (data[0].hasOwnProperty(param.key)) {\r\n      switch (param.type.toLowerCase()) {\r\n        case 'string':\r\n          result = data.sort((a: any, b: any) => {\r\n            return a[param.key].localeCompare(b[param.key], 'sv', { ignorePunctuation: true })\r\n          });\r\n          result = param.order.toLowerCase() === 'asc' ? result : result.reverse();\r\n          setSort(param);\r\n          return result;\r\n        case 'int':\r\n          result = data.sort((a: any, b: any) => {\r\n            return a[param.key] - b[param.key];\r\n          });\r\n          result = param.order.toLowerCase() === 'asc' ? result : result.reverse();\r\n          setSort(param);\r\n          return result;\r\n        case 'date':\r\n          result = data.sort((a: any, b: any) => {\r\n            return new Date(a[param.key]).getTime() - new Date(b[param.key]).getTime();\r\n          });\r\n          result = param.order.toLowerCase() === 'asc' ? result : result.reverse();\r\n          setSort(param);\r\n          return result;\r\n        default:\r\n          return data;\r\n      }\r\n    }\r\n    return data;\r\n\r\n  };\r\n\r\n  // Search through a nested object for a key with an array of objects as values.\r\n  const nestedArraySearch = (object: any, keys: Array<string>) => {\r\n    let target = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n\r\n    }\r\n    return target;\r\n  };\r\n\r\n  // Filter dynamically through nested data with keys.\r\n  const nestedFilter = (object: any, keys: Array<string>, filter: string | Array<string>) => {\r\n    let target = object;\r\n    for (var i = 0; i < keys.length; i++) {\r\n      if (target.hasOwnProperty(keys[i])) {\r\n        target = target[keys[i]];\r\n       /* if (Array.isArray(target)) {\r\n          i = i+1;\r\n          // Check if the Array contains objects.\r\n          if(target.some(t => t.hasOwnProperty(keys[i]))) {\r\n            target = target.filter((t) => {\r\n              return t.hasOwnProperty(keys[i]);\r\n            });\r\n            if (target.length < 1) {\r\n              target = null;\r\n              break;\r\n            }\r\n          }\r\n          else {\r\n            break;\r\n          }\r\n        }*/\r\n      }\r\n      else {\r\n        target = null;\r\n        console.warn(\"Undefined keys are set for the filter object!\");\r\n        break;\r\n      }\r\n    }\r\n    if (target !== undefined && target !== null) {\r\n      if (Array.isArray(target)) {\r\n        return target.some((item: any) => filter.includes(item));\r\n      }\r\n      else {\r\n        return filter.includes(target);\r\n      }\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n\r\n  };\r\n\r\n  const handleFilter = (param: any, data: IQueryObject) => {\r\n    let result;\r\n    // if (data[0].hasOwnProperty(param.name)) {\r\n    switch (param.type) {\r\n      case 'radio':\r\n        if (param.filter === 'all') {\r\n          result = data;\r\n        }\r\n        else {\r\n          result = data.filter((item: any) => {\r\n            if (Array.isArray(param.name)) {\r\n              return nestedFilter(item, param.name, param.filter);\r\n            }\r\n            else {\r\n              // If item[param.name] is undefined or null it will throws an error!\r\n              if (item[param.name] !== undefined && item[param.name] !== null) {\r\n                return item[param.name].toString().toLowerCase() === param.filter.toString().toLowerCase();\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        return result;\r\n      case 'list':\r\n        switch (param.name) {\r\n           case 'form_categories':\r\n             result = param.filter.length < 1 ? data : data.filter((d: any, i: number) => {\r\n               for (let i = 0; i < d.form_categories.length; i++) {\r\n                 return param.filter.indexOf(d.form_categories[i].name) !== -1;\r\n               }\r\n             });\r\n             break;\r\n          default:\r\n            result = data.filter((d: any) => {\r\n              // If the key for the searched value is nested. \r\n              if (Array.isArray(param.name)) {\r\n                return nestedFilter(d, param.name, param.filter);\r\n              }\r\n              else {\r\n                if (Array.isArray(d[param.name])) {\r\n                  return d[param.name].some((item: any) => param.filter.includes(item));\r\n                }\r\n                else {\r\n                  return param.filter.includes(d[param.name]);\r\n                }\r\n              }\r\n            });\r\n            break;\r\n        }\r\n        return result;\r\n      case 'switch':\r\n        if (param.filter.checked) {\r\n          result = data.filter((item: any) => {\r\n            if (Array.isArray(param.name)) {\r\n              return nestedFilter(item, param.name, param.filter);\r\n            }\r\n            else {\r\n              return item[param.name] === param.filter.value;\r\n            }\r\n          });\r\n          return result;\r\n        }\r\n        else {\r\n          return data;\r\n        }\r\n      case 'range':\r\n        result = data.filter((item: any) => {\r\n          return item[param.name] <= param.filter.end && item[param.name] >= param.filter.start;\r\n        });\r\n        return result;\r\n      default:\r\n        return data;\r\n    }\r\n    // }\r\n    //  return data;\r\n  };\r\n\r\n  const handleSearch = (param: string | number, data: any) => {\r\n    let result;\r\n    const searchString = param.toString().toLowerCase().trim();\r\n    if (searchString !== \"\") {\r\n      result = data.filter((obj: any) => {\r\n        return Object.keys(obj).some((key) => {\r\n          if (obj[key] !== null) {\r\n            return obj[key].toString().toLowerCase().includes(searchString);\r\n          }\r\n        })\r\n      });\r\n      setSearch(searchString);\r\n      return result;\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const exportData = () => {\r\n    if (headers !== null) {\r\n      const firstRow = headers.map(header => header.headerName);\r\n      const rows = [];\r\n      rows.push(firstRow);\r\n      for (const [key, value] of Object.entries(displayedData)) {\r\n        let res: any[] = [];\r\n        headers.map(header => {\r\n          if (value.hasOwnProperty(header.field)) {\r\n            res.push(value[header.field] !== null ? value[header.field].toString().replace(/(\\r\\n|\\n|\\r)/gm, \"\") : \" \");\r\n          }\r\n        });\r\n        rows.push(res);\r\n      }\r\n\r\n      const fName = `${props.filename || 'data'}.csv`;\r\n      let csv = '';\r\n      for (let i = 0; i < rows.length; i++) {\r\n        let row = rows[i];\r\n        for (let j = 0; j < row.length; j++) {\r\n          let val = row[j] === null ? '' : row[j].toString();\r\n          val = val.replace(/\\t/gi, \" \");\r\n          if (j > 0)\r\n            csv += ';';\r\n          csv += val;\r\n        }\r\n        csv += '\\n';\r\n      }\r\n      // for UTF-16\r\n      let cCode, bArr = [];\r\n      bArr.push(255, 254);\r\n      for (let i = 0; i < csv.length; ++i) {\r\n        cCode = csv.charCodeAt(i);\r\n        bArr.push(cCode & 0xff);\r\n        bArr.push(cCode / 256 >>> 0);\r\n      }\r\n      const blob = new Blob([new Uint8Array(bArr)], { type: 'text/csv;charset=UTF-16LE;' });\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(blob, fName);\r\n      } else {\r\n        let link = document.createElement(\"a\");\r\n        if (link.download !== undefined) {\r\n          const url = window.URL.createObjectURL(blob);\r\n          link.setAttribute(\"href\", url);\r\n          link.setAttribute(\"download\", fName);\r\n          link.style.visibility = 'hidden';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          // Timeout is needed for large datasets.\r\n          setTimeout(function () {\r\n            window.URL.revokeObjectURL(url);\r\n          }, 0);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (JSON.stringify(displayedData) !== JSON.stringify(displayedDataRef.current)) {\r\n      displayedDataRef.current = displayedData;\r\n      setDisplayedData(displayedData);\r\n      props.setData(displayedData);\r\n    }\r\n  }, [sortOptions, sort, displayedData, props]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Tooltip title=\"Filtrera\">\r\n              <IconButton\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"filtrera\"\r\n                onClick={() => setCollapseFilter(!collapseFilter)}\r\n              >\r\n                <FilterListIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {\r\n              props.useSort ?\r\n                <FormControl className={classes.margin}>\r\n                  <InputLabel htmlFor=\"demo-customized-select-native\"></InputLabel>\r\n                  <NativeSelect\r\n                    id=\"demo-customized-select-native\"\r\n                    value={sort}\r\n                    onChange={(e) => handleQuery(e, \"sort\")}\r\n                    input={<BootstrapInput />}\r\n                  >\r\n                    {\r\n                      sortOptions.map((sortOption, i) => {\r\n                        return (\r\n                          <option key={`${sortOption.name}-${i}`} value={JSON.stringify(sortOption)}>{sortOption.name}</option>\r\n                        );\r\n                      })\r\n                    }\r\n                  </NativeSelect>\r\n                </FormControl>\r\n                : null\r\n            }\r\n            <div className={classes.filler} />\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                onChange={(e) => handleQuery(e, 'search')}\r\n                placeholder={props.placeholder || 'Sök...'}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'sök på namn' }}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Collapse in={collapseFilter}>\r\n          <FilterMenu handleQuery={handleQuery} date={props.date} filters={props.filters} />\r\n        </Collapse>\r\n      </div>\r\n      <br />\r\n      <ButtonPanel\r\n        exportData={exportData}\r\n        headers={headers}\r\n        updateData={props.updateData}\r\n        showDelete={props.showDelete}\r\n        handleDelete={props.handleDelete}\r\n      />\r\n      <br />\r\n      {\r\n        showSearchResultText && data.length > 0 ?\r\n          (\r\n            <Typography variant=\"body2\"><b>Visar {displayedData.length} av {data.length} projekt</b></Typography>\r\n          ) :\r\n          (null)\r\n      }\r\n      <br />\r\n    </Fragment>\r\n  );\r\n\r\n};\r\n\r\nexport default Querybar;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\statistics\\charts\\barchart\\simple.tsx",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\redux\\actions\\counterActions.ts",["271"],"const increment = () => {\r\n    return {\r\n        type: \"INCREMENT\"\r\n    }\r\n}\r\n\r\nconst decrement = () => {\r\n    return {\r\n        type: \"DECREMENT\"\r\n    }\r\n}\r\n\r\nexport default {\r\n    increment,\r\n    decrement\r\n}",["272","273"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\ChipList\\ChipList.tsx",["274","275"],"import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport {\r\n    makeStyles,\r\n    useTheme,\r\n    Theme,\r\n    FormControl,\r\n    InputLabel,\r\n    Input,\r\n    Chip,\r\n    MenuItem,\r\n    Select,\r\n    createStyles\r\n} from '@material-ui/core';\r\nimport { regularChipListProps as ChipListTypes } from \"../../../types/ChipList.types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    chipformControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 150,\r\n        maxWidth: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chipContainer: {\r\n        border: '1px solid #ccc',\r\n        padding: theme.spacing(1),\r\n        minWidth: 500,\r\n        maxWidth: 500,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst ChipList = (props: ChipListTypes) => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const label = props.label || '';\r\n    const type = props.type || 'list';\r\n    const name = props.name || '';\r\n    const values = props.data.values || [];\r\n    const [selectedValues, setSelectedValues] = useState<string[]>([]);\r\n\r\n    const getStyles = (name: string, personName: string[], theme: Theme) => {\r\n        return {\r\n            fontWeight:\r\n                personName.indexOf(name) === -1\r\n                    ? theme.typography.fontWeightRegular\r\n                    : theme.typography.fontWeightMedium,\r\n        };\r\n    };\r\n\r\n\r\n    const handleFilter = (e: ChangeEvent<{ value: unknown }>) => {\r\n\r\n        const target = e.target.value as string[];\r\n        setSelectedValues(target);\r\n        const query = { filter: target.length > 0 ? target : values, type: 'list', name }\r\n        props.handleFilter(query, 'filter');\r\n    };\r\n\r\n    const removeChip = (e:any, removed: string | number) => {\r\n        let newState = selectedValues.filter((selected) => {\r\n            return selected !== removed;\r\n        });\r\n        setSelectedValues(newState);\r\n        const query = { filter: newState.length > 0 ? newState : values, type: 'list', name };\r\n        props.handleFilter(query, 'filter');\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [values]);\r\n\r\n    return (\r\n        <FormControl className={classes.chipformControl}>\r\n            <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\r\n            <Select\r\n                onMouseDown={(event) => {\r\n                    event.stopPropagation();\r\n                }}\r\n                labelId=\"demo-mutiple-chip-label\"\r\n                multiple\r\n                value={selectedValues}\r\n                onChange={(e) => handleFilter(e)}\r\n                input={<Input id={`select-multiple-chip-${Math.random() * Math.random()}`} />}\r\n                renderValue={(selected) => (\r\n                    <div className={classes.chips}>\r\n                        {(selected as string[]).map((value) => (\r\n                            <Chip\r\n                                key={value}\r\n                                label={value}\r\n                                className={classes.chip}\r\n                                clickable ={true}\r\n                                color=\"primary\"\r\n                               onDelete={(e) => removeChip(e, value)}\r\n                                onMouseDown={(event) => {\r\n                                    event.stopPropagation();\r\n                                }}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n            >\r\n                {values.map((value:any) => (\r\n                    <MenuItem key={value} value={value} style={getStyles(value, selectedValues, theme)}>\r\n                        {value}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default ChipList;",["276","277"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\functions.ts",["278","279"],"/* eslint-disable import/no-anonymous-default-export */\r\n\r\n\r\nconst isValidUrl = (url:string) => {\r\n    const result = String(url).match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g);\r\n    return result !== null;\r\n};\r\n\r\n\r\nexport default {\r\n    isValidUrl,\r\n}","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\FilterMenu.tsx",["280","281"],"import React from 'react';\r\nimport {\r\n    makeStyles,\r\n    Grid,\r\n    FormLabel,\r\n    Divider,\r\n    Tooltip,\r\n    IconButton,\r\n} from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport RadioButtonGroup from './components/RadioButtonGroup/RadioButtonGroup';\r\nimport RangeSlider from './components/RangeSlider/RangeSlider';\r\nimport DateRange from './components/DateRange/DateRange';\r\nimport Switch from './components/Switch/Switch';\r\nimport ChipList from './components/ChipList/ChipList';\r\nimport { FilterMenuTypes } from '../types/FilterMenu.types';\r\nimport HieracialChipList from './components/ChipList/Hierarchical';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    gridItem: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    headerGrid: {\r\n        padding: 0,\r\n    },\r\n    clearFilterButton: {\r\n        float: 'right',\r\n        padding: 0,\r\n        margin: 0\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    filterContainer: {\r\n        padding: theme.spacing(2),\r\n        borderBottom: '1px solid #ccc'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    chipformControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 150,\r\n        maxWidth: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n\r\n}));\r\n\r\ninterface IActiveFilter {\r\n    name: string | Array<string>;\r\n    type: string;\r\n    filter: any;\r\n};\r\n\r\ninterface filterKeys {\r\n    name: Array<string>;\r\n    type: string;\r\n    filter: any;\r\n}\r\n/**\r\n * \r\n     * Summary: Filtermenu component for the querybar.\r\n     *\r\n     * Description. (use period)\r\n     *\r\n     * @since      x.x.x\r\n     * @access     private\r\n     *\r\n     * @constructs namespace.Class\r\n     * @augments   Parent \r\n     * @mixes      mixin\r\n     *\r\n     * @alias    FilterMenu\r\n     * @memberof namespace\r\n     *\r\n     * @see   Function/class relied on\r\n     * @link  URL\r\n     * @fires Class#eventName\r\n     *\r\n     * @param {Object} props     The model's attributes.\r\n     * @param {type}   attributes.key One of the model's attributes.\r\n     * @param {Object} [options]      The model's options.\r\n     * @param {type}   attributes.key One of the model's options.\r\n     * @returns A filtermenu component with various types of filters.\r\n */\r\nconst FilterMenu = (props: FilterMenuTypes) => {\r\n    const classes = useStyles();\r\n    const filters = props.filters || [];\r\n    const [activeFilters, setActiveFilters] = React.useState<IActiveFilter[]>([]);\r\n    const activeFilterRef = React.useRef(activeFilters);\r\n\r\n    const removeFilter = (filterKeys: Array<any>) => {        \r\n        let newState = JSON.parse(JSON.stringify(activeFilters));\r\n        for (let i = 0; i < filterKeys.length; i++) {\r\n            const filterKey = Array.isArray(filterKeys[i].name) ? filterKeys[i].name.join() : filterKeys[i].name;\r\n\r\n            const index = newState.findIndex((item: any) => {\r\n                const currentFilter = Array.isArray(item.name) ? item.name.join() : item.name;\r\n                return currentFilter === filterKey;\r\n            });\r\n            if (index !== -1) {\r\n                newState.splice(index, 1);\r\n            }\r\n\r\n        }\r\n        setActiveFilters(newState);\r\n    };\r\n\r\n    const handleFilter = (filter: Array<IActiveFilter> | any) => {\r\n        let newState = [...activeFilters];\r\n        if (Array.isArray(filter)) {\r\n            for (let i = 0; i < filter.length; i++) {\r\n                const index = newState.findIndex(x => {\r\n                    if (Array.isArray(filter[i].name) && Array.isArray(x.name)) {\r\n                        return x.name.join() === filter[i].name.join();\r\n                    }\r\n                    else {\r\n                        return x.name === filter[i].name;\r\n                    }\r\n                });\r\n                if (index !== -1) {\r\n                    if (filter[i].filter.length > 0) {\r\n                        newState[index] = filter[i];\r\n                    }\r\n                } else {\r\n                    if (filter[i].filter.length > 0) {\r\n                        newState.push(filter[i]);\r\n                    }\r\n                    else {\r\n                        newState = newState.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const index = newState.findIndex(x => {\r\n                if (Array.isArray(filter.name) && Array.isArray(x.name)) {\r\n                    return x.name.join() === filter.name.join();\r\n                }\r\n                else {\r\n                    return x.name === filter.name;\r\n                }\r\n            });\r\n            if (index !== -1) {\r\n                newState[index] = filter;\r\n            } else {\r\n                newState.push(filter);\r\n            }\r\n        }\r\n        setActiveFilters(newState);\r\n    };\r\n\r\n    const clearFilter = () => {\r\n        setActiveFilters([]);\r\n    };\r\n\r\n\r\n    const handleQuery = React.useCallback(() => {\r\n        props.handleQuery(activeFilters, \"filter\");\r\n    }, [props, activeFilters]);\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (JSON.stringify(activeFilterRef.current) !== JSON.stringify(activeFilters)) {\r\n            handleQuery();\r\n            activeFilterRef.current = activeFilters;\r\n        }\r\n    }, [filters, activeFilters, handleQuery]);\r\n\r\n    return (\r\n        <div className={classes.filterContainer}>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} className={classes.headerGrid}>\r\n                    <Tooltip title=\"Rensa filter\">\r\n                        <IconButton\r\n                            className={classes.clearFilterButton}\r\n                            color=\"primary\"\r\n                            onClick={() => clearFilter()}\r\n                        >\r\n                            <HighlightOffIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Grid>\r\n                {\r\n                    filters.length > 0 ? filters.map((filter, index) => {\r\n                        switch (filter.type) {\r\n                            case \"hierachical\":\r\n                                return (\r\n                                    <React.Fragment key={`${filter.name}-${index}`}>\r\n                                        <HieracialChipList name={filter.name} type={filter.type} data={filter.data} handleFilter={handleFilter} removeFilter={removeFilter} />\r\n                                    </React.Fragment>\r\n                                )\r\n                            case \"radio\":\r\n                                return (\r\n                                    <Grid key={`${filter.name}-${index}`} item xs={filter.width || 4} className={classes.gridItem}>\r\n                                        <FormLabel component=\"legend\">{filter.label}</FormLabel>\r\n                                        <Divider />\r\n                                        <RadioButtonGroup name={filter.name} data={filter.data} handleFilter={handleFilter} />\r\n                                    </Grid>\r\n                                )\r\n                            case \"range\":\r\n                                return (\r\n                                    <Grid key={`${filter.name}-${index}`} item xs={filter.width || 4} className={classes.gridItem}>\r\n                                        <FormLabel component=\"legend\">{filter.label}</FormLabel>\r\n                                        <Divider />\r\n                                        <RangeSlider name={filter.name} type={filter.type} data={filter.data} handleFilter={handleFilter} />\r\n                                    </Grid>\r\n                                );\r\n                            case \"dateRange\":\r\n                                return (\r\n                                    <Grid key={`${filter.name}-${index}`} item xs={filter.width || 4} className={classes.gridItem}>\r\n                                        <FormLabel component=\"legend\">{filter.label}</FormLabel>\r\n                                        <Divider />\r\n                                        <DateRange name={filter.name} data={filter.data} handleFilter={handleFilter} />\r\n                                    </Grid>\r\n                                );\r\n                            case \"chip\":\r\n                                return (\r\n                                    <Grid key={`${filter.name}-${index}`} item xs={filter.width || 4} className={classes.gridItem}>\r\n                                        <FormLabel component=\"legend\">{filter.label}</FormLabel>\r\n                                        <Divider />\r\n                                        <ChipList name={filter.name} type={filter.type} data={filter.data} handleFilter={handleFilter} />\r\n                                    </Grid>\r\n                                )\r\n                            case \"switch\":\r\n                                return (\r\n                                    <Grid key={`${filter.name}-${index}`} item xs={filter.width || 4} className={classes.gridItem}>\r\n                                        <FormLabel component=\"legend\">{filter.label}</FormLabel>\r\n                                        <Divider />\r\n                                        <Switch name={filter.name} value={filter.data.value} handleFilter={handleFilter} />\r\n                                    </Grid>\r\n                                );\r\n                            default:\r\n                                return null;\r\n                        }\r\n                    }) : null\r\n                }\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterMenu;",["282","283"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\RangeSlider\\RangeSlider.tsx",["284","285"],"import React, { Fragment, useState, useEffect, ChangeEvent } from \"react\";\r\nimport { makeStyles, Theme, createStyles, Grid, Input } from \"@material-ui/core\";\r\nimport CustomSlider from \"./CustomSlider\";\r\nimport { RangeSliderTypes } from \"../../../types/RangeSlider.types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    rangeSlider: {\r\n        marginTop: '2.5em'\r\n    },\r\n    input: {\r\n        width: 42,\r\n    },\r\n}));\r\n\r\ninterface IMark {\r\n    value: number,\r\n    label: string\r\n};\r\n\r\nconst RangeSlider = (props: RangeSliderTypes) => {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState(props.data || []);\r\n    const range = props.data.values || null;\r\n    const type = props.type || 'range';\r\n    const name = props.name || '';\r\n    const useInputs = props.useInputs || true;\r\n    const [values, setValues] = useState(props.data.values || null);\r\n    const [ratingMarks, setRatingMarks] = useState<IMark[]>([]);\r\n\r\n    const ratingsRangeText = (value: any) => {\r\n        return `${value}`;\r\n    };\r\n\r\n    const handleFilter = (vals: number | Array<number>) => {\r\n        if (Array.isArray(vals)) {\r\n            setValues(vals);\r\n            const query = { filter: { start: vals[0], end: vals[1] }, type, name }\r\n            props.handleFilter(query, 'filter');\r\n        }\r\n    };\r\n    const handleInputChange = (event:ChangeEvent) => {\r\n       // setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n      };\r\n    \r\n      const handleBlur = () => {\r\n      /*  if (value < 0) {\r\n          setValues(0);\r\n        } else if (value > 100) {\r\n          setValues(100);\r\n        }*/\r\n      };\r\n\r\n    useEffect(() => {\r\n\r\n        if (ratingMarks === null && range !== null) {\r\n            const numberOfMarks = 5;\r\n            const mod = Math.round(range[1] / numberOfMarks);\r\n            let marks = [];\r\n            for (let i = range[0]; i <= numberOfMarks; i++) {\r\n                const mark = mod * i;\r\n                marks.push({ value: mark, label: mark.toString() });\r\n            }\r\n            setRatingMarks(marks);\r\n        }\r\n    }, [values, ratingMarks, range]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                useInputs ? (\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Input\r\n                                className={classes.input}\r\n                                value={values[0]}\r\n                                margin=\"dense\"\r\n                                onChange={handleInputChange}\r\n                                onBlur={handleBlur}\r\n                                inputProps={{\r\n                                    step: 10,\r\n                                    min: 0,\r\n                                    max: 100,\r\n                                    type: 'number',\r\n                                    'aria-labelledby': 'input-slider',\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <CustomSlider\r\n                                className={classes.rangeSlider}\r\n                                valueLabelDisplay=\"on\"\r\n                                value={values}\r\n                                marks={ratingMarks}\r\n                                min={range[0]}\r\n                                max={range[1]}\r\n                                onChange={(e, values) => handleFilter(values)}\r\n                                aria-labelledby=\"range-slider\"\r\n                                getAriaValueText={(e) => ratingsRangeText(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Input\r\n                                className={classes.input}\r\n                                value={values[0]}\r\n                                margin=\"dense\"\r\n                                onChange={handleInputChange}\r\n                                onBlur={handleBlur}\r\n                                inputProps={{\r\n                                    step: 10,\r\n                                    min: 0,\r\n                                    max: 100,\r\n                                    type: 'number',\r\n                                    'aria-labelledby': 'input-slider',\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                ) :\r\n                    (\r\n                        <CustomSlider\r\n                            className={classes.rangeSlider}\r\n                            valueLabelDisplay=\"on\"\r\n                            value={values}\r\n                            marks={ratingMarks}\r\n                            min={range[0]}\r\n                            max={range[1]}\r\n                            onChange={(e, values) => handleFilter(values)}\r\n                            aria-labelledby=\"range-slider\"\r\n                            getAriaValueText={(e) => ratingsRangeText(e)}\r\n                        />\r\n                    )\r\n            }\r\n        </Fragment>\r\n    );\r\n\r\n};\r\nexport default RangeSlider;",["286","287"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\ButtonPanel\\Export\\ExportButton.js",["288"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\ChipList\\Hierarchical.tsx",["289","290","291","292","293"],"import React from \"react\";\r\nimport {\r\n    makeStyles,\r\n    useTheme,\r\n    Theme,\r\n    createStyles,\r\n    Grid,\r\n    FormLabel,\r\n    Divider,\r\n} from '@material-ui/core';\r\nimport { hierachialChipListProps } from \"../../../types/ChipList.types\";\r\nimport ChipList from \"./ChipList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridItem: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    headerGrid: {\r\n        padding: 0,\r\n    },\r\n    clearFilterButton: {\r\n        float: 'right',\r\n        padding: 0,\r\n        margin: 0\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    filterContainer: {\r\n        padding: theme.spacing(2),\r\n        borderBottom: '1px solid #ccc'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    chipformControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 150,\r\n        maxWidth: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n\r\n}));\r\n\r\ninterface IActiveFilter {\r\n    name: string | Array<string>,\r\n    type: string,\r\n    filter: any,\r\n};\r\n\r\nconst HieracialChipList = (props: hierachialChipListProps) => {\r\n\r\n    const classes = useStyles();\r\n    const [chipLists, setChipLists] = React.useState<any>(props.data || []);\r\n    const filterKeys = React.useRef<any>(null);\r\n    const [activeFilters, setActiveFilters] = React.useState<any>([]);\r\n    const activeFilterRef = React.useRef(activeFilters);\r\n    const [gridSize, setGridSize] = React.useState<any>(props.gridSize || 12);\r\n\r\n    // Filter if selected has values or else disable all chiplists that's lower in hierachy.\r\n    const onSelected = (list: Array<IActiveFilter> | any) => {\r\n        let chips = JSON.parse(JSON.stringify(chipLists));\r\n        const filters = JSON.parse(JSON.stringify(activeFilters));\r\n        const targetIndex = chips.findIndex((chipList: any) => {\r\n            if (Array.isArray(list.name) && Array.isArray(chipList.name)) {\r\n                return list.name.join() === chipList.name.join();\r\n            }\r\n            else {\r\n                return list.name === chipList.name;\r\n            }\r\n        });\r\n        const startIndex = targetIndex + 1;\r\n        if (list.filter.length < 1) {\r\n            if(startIndex < chips.length) {\r\n                for (let i = startIndex; i < chips.length; i++) {\r\n                    chips[i].disabled = true;\r\n                }\r\n                setActiveFilters( filters.slice(0, startIndex-1));\r\n                setChipLists(chips);\r\n            }\r\n                props.removeFilter(filters.slice(startIndex));\r\n        } else {\r\n            let newState = [...activeFilters];\r\n            const index = newState.findIndex(x => {\r\n                if (Array.isArray(list.name) && Array.isArray(x.name)) {\r\n                    return x.name.join() === list.name.join();\r\n                }\r\n                else {\r\n                    return x.name === list.filter.name;\r\n                }\r\n            });\r\n            if (index !== -1) {\r\n                newState[index] = list;\r\n            } else {\r\n                newState.push(list);\r\n            }\r\n            if( startIndex < chips.length) {\r\n                chips[startIndex].disabled = false;\r\n            }\r\n            setChipLists(chips);\r\n            setActiveFilters(newState);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(filterKeys.current === null && chipLists.length > 0) {\r\n            const keys = chipLists.map((val:any) => {\r\n                return val.name;\r\n            });\r\n            filterKeys.current = keys;\r\n        }\r\n        if (chipLists.length > 0 && !props.gridSize) {\r\n            setGridSize(Math.floor(12 / chipLists.length));\r\n        }\r\n        if (JSON.stringify(activeFilterRef.current) !== JSON.stringify(activeFilters)) {\r\n            if(activeFilters.length === 0) {\r\n                props.removeFilter(activeFilterRef.current);\r\n            }\r\n            else {\r\n                props.handleFilter(activeFilters, 'filter');\r\n            }\r\n            activeFilterRef.current = activeFilters;\r\n        }\r\n    }, [JSON.parse(JSON.stringify(chipLists)), activeFilters]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                chipLists.map((item: any, index: number) => {\r\n                    return (\r\n                        <Grid key={`${item.name}-${index}`} item xs={gridSize} className={classes.gridItem}>\r\n                            <FormLabel component=\"legend\">{item.label}</FormLabel>\r\n                            <Divider />\r\n                            <ChipList name={item.name} type={\"list\"} disabled={item.disabled || false} data={item.data} handleFilter={onSelected} />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default HieracialChipList;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\reportWebVitals.js",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\datahandler\\create\\createButton.tsx",["294","295","296"],"import React from \"react\";\r\nimport {\r\n     makeStyles,\r\n    Theme,\r\n    createStyles,\r\n    Button,\r\n    Popover,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    \r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\ntype props = {\r\n    label?: string;\r\n    color?: string;\r\n};\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n    },\r\n    input: {\r\n        visibility: \"hidden\"\r\n    }\r\n}));\r\n\r\nconst CreateButton = (props: props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClick}\r\n                startIcon={<EditIcon />}\r\n            >\r\n                {props.label || \"Create Sheets\"}\r\n            </Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <p>test</p>\r\n            </Popover>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default CreateButton;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\DraggableTable.tsx",["297"],"import React, { useState } from \"react\";\r\nimport {\r\n  DragDropContext,\r\n  Droppable,\r\n  Draggable,\r\n  DropResult,\r\n  ResponderProvided,\r\n  DraggableProvided,\r\n  DroppableProvided,\r\n  DraggableStateSnapshot\r\n} from \"react-beautiful-dnd\";\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  ButtonGroup,\r\n  Tooltip,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Row from \"./assets/Row\";\r\n\r\nexport interface DataItem {\r\n  uuid: string;\r\n  description: string;\r\n  unitPrice: number;\r\n  quantity: number;\r\n}\r\n\r\n/* \r\nNote: this is a working example, but more can be done to improve it.\r\n\r\nIn particular, on drag, the table cells in the dragged row may collapse and shrink the overall row.\r\n\r\nIf you wish to preserve their size mid-drag, you can create a custom component that wraps\r\nthe material TableCell and saves the pre-drag dimensions (e.g. in a ref or in state).\r\nThe component can be passed an 'isDragging' prop (via snapshot.isDragging) and can conditionally\r\napply pre-drag width/height via styles.\r\n\r\nPre-drag dimensions can be obtained via the new-ish ResizeObserver API. If you are using class \r\ncomponents, the getSnapshotBeforeUpdate() lifecycle method can work with getBoundingClientRect(), \r\n*/\r\n\r\ntype draggableTableProps = {\r\n  rows: Array<any>;\r\n  setRows?: (rows:Array<any>) => void;\r\n  title: string;\r\n  headers: any;\r\n  editable?: boolean;\r\n  showDetails: (row:any, title?: string) => void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\nshowIcon: {\r\n  color: \"green\",\r\n}\r\n  }),\r\n);\r\n\r\nconst DraggableTable: React.FC<draggableTableProps> = (props) => {\r\n\r\n  const classes = useStyles();\r\n  // cache the items provided via props in state for purposes of this demo\r\n  const tableData: Array<DataItem> = [\r\n    { uuid: \"1\", description: \"Item #1\", unitPrice: 11.11, quantity: 1 },\r\n    { uuid: \"2\", description: \"Item #2\", unitPrice: 22.22, quantity: 2 },\r\n    { uuid: \"3\", description: \"Item #3\", unitPrice: 33.33, quantity: 3 },\r\n    { uuid: \"4\", description: \"Item #4\", unitPrice: 44.44, quantity: 4 },\r\n    { uuid: \"5\", description: \"Item #5\", unitPrice: 55.55, quantity: 5 }\r\n  ];\r\n  const [localItems, setLocalItems] = useState<Array<DataItem>>(tableData);\r\n\r\n  // normally one would commit/save any order changes via an api call here...\r\n  const handleDragEnd = (result: DropResult, provided?: ResponderProvided) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    if (result.destination.index === result.source.index) {\r\n      return;\r\n    }\r\n\r\n    setLocalItems((prev: any) => {\r\n      const temp = [...prev];\r\n      const d = temp[result.destination!.index];\r\n      temp[result.destination!.index] = temp[result.source.index];\r\n      temp[result.source.index] = d;\r\n\r\n      return temp;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <colgroup>\r\n          <col style={{ width: \"5%\" }} />\r\n          <col style={{ width: \"35%\" }} />\r\n          <col style={{ width: \"20%\" }} />\r\n          <col style={{ width: \"20%\" }} />\r\n          <col style={{ width: \"20%\" }} />\r\n        </colgroup>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">&nbsp;</TableCell>\r\n            <TableCell>Description</TableCell>\r\n            <TableCell align=\"right\">Unit Cost</TableCell>\r\n            <TableCell align=\"right\">Qty/Rate</TableCell>\r\n            <TableCell align=\"right\">Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          <Droppable droppableId=\"droppable\" direction=\"vertical\">\r\n            {(droppableProvided: DroppableProvided) => (\r\n              <TableBody\r\n                ref={droppableProvided.innerRef}\r\n                {...droppableProvided.droppableProps}\r\n              >\r\n                {localItems.map((item: DataItem, index: number) => (\r\n                  <Draggable\r\n                    key={item.uuid}\r\n                    draggableId={item.uuid}\r\n                    index={index}\r\n                  >\r\n                    {(\r\n                      draggableProvided: DraggableProvided,\r\n                      snapshot: DraggableStateSnapshot\r\n                    ) => {\r\n                      return (\r\n                        <TableRow\r\n                          ref={draggableProvided.innerRef}\r\n                          {...draggableProvided.draggableProps}\r\n                          style={{\r\n                            ...draggableProvided.draggableProps.style,\r\n                            background: snapshot.isDragging\r\n                              ? \"rgba(245,245,245, 0.75)\"\r\n                              : \"none\"\r\n                          }}\r\n                        >\r\n                          {/* note: `snapshot.isDragging` is useful to style or modify behaviour of dragged cells */}\r\n                          <TableCell align=\"left\">\r\n                            <ButtonGroup>\r\n                             <div {...draggableProvided.dragHandleProps}>\r\n                                <Tooltip title=\"Dra\">\r\n                                <ReorderIcon color=\"primary\" />\r\n                                </Tooltip>\r\n                              </div>\r\n                              <Tooltip title=\"redigera\">\r\n                                <IconButton color=\"primary\">\r\n                                <EditIcon onClick={() => console.log(\"edit\")} />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                              <Tooltip title=\"Visa\">\r\n                                <IconButton className={classes.showIcon}>\r\n                                <VisibilityIcon onClick={() => console.log(\"show\")} />\r\n                                </IconButton>\r\n                              </Tooltip>          \r\n                              <Tooltip title=\"redigera\">\r\n                                <IconButton color=\"secondary\">\r\n                                <DeleteIcon onClick={() => console.log(\"delete\")} />\r\n                                </IconButton>\r\n                              </Tooltip>                                 \r\n                            </ButtonGroup>\r\n                          </TableCell>\r\n                          <TableCell>{item.description}</TableCell>\r\n                          <TableCell align=\"right\">{item.unitPrice}</TableCell>\r\n                          <TableCell align=\"right\">{item.quantity}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {(item.unitPrice * item.quantity).toFixed(2)}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    }}\r\n                  </Draggable>\r\n                ))}\r\n                {droppableProvided.placeholder}\r\n              </TableBody>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default DraggableTable;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\DraggableExample.tsx",["298","299"],"import React from 'react';\r\nimport { makeStyles, Container, Typography } from '@material-ui/core';\r\nimport Table  from \"../tables/index\";\r\nimport Querybar from '../querybar/Querybar';\r\nimport settings from './settings';\r\nimport {useSelector } from 'react-redux';\r\nimport allActions from '../../redux/actions/index';\r\n\r\nenum tableTypes {\r\n    basic = \"basic\",\r\n    draggable = \"draggable\",\r\n    mail = \"mail\",\r\n};\r\n\r\nconst placeholder = 'Search...';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginTop: '1em',\r\n        minHeight: '82vh'\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst DraggableExample = () => {\r\n    const classes = useStyles();\r\n    const currentData = useSelector((state:any) => state.currentData)\r\n    const [rows, setRows] = React.useState(currentData.data);\r\n    const [data, setData] = React.useState(currentData.data);\r\n    const headers = Object.keys(currentData.data[0]);\r\n    debugger;\r\n    const updateData = () => {\r\n        return currentData.data;\r\n    };\r\n\r\n    const handleDelete = () =>{\r\n\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        console.log(rows);\r\n    }, [rows]);\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Typography>A Simple Example</Typography>\r\n            <br />\r\n            <Querybar\r\n                headers={settings.headers}\r\n                sort={settings.sort}\r\n                data={data}\r\n                updateData={updateData}\r\n                filters={settings.filters}\r\n                setData={setRows}\r\n                placeholder={placeholder}\r\n                useSort={settings.useSort || true} \r\n                showSearchResultText={settings.showSearchResultText || true}\r\n                showDelete={true}\r\n                handleDelete={handleDelete}\r\n                />\r\n                <Table\r\n                title={\"name\"}\r\n                type={tableTypes.draggable}\r\n                headers={headers}\r\n                data={rows}\r\n                updateData={setRows} />\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default DraggableExample;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Footer\\Footer.js",[],["300","301"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\pages\\Home\\CardLink.tsx",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\querybar\\Filter\\components\\Switch\\Switch.tsx",[],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Navbar\\Navbar.tsx",["302","303","304","305","306"],"import React  from \"react\";\r\nimport { AppBar, makeStyles, Button, IconButton, Toolbar, Typography, MenuItem, Menu } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Router from \"./Router\";\r\nimport { Link, BrowserRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  appbar: {\r\n    //  minHeight: '8vh'\r\n    padding: theme.spacing(1)\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loggedIn, setLoggedIn] = React.useState<boolean>(true);\r\n  const [user, setUser] = React.useState<any>(null);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const visible = Boolean(anchorEl);\r\n\r\n  const handleDrawerOpen = () => {\r\n    //setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    // setOpen(false);\r\n  };\r\n\r\n  const signOut = () => {\r\n    setAnchorEl(null);\r\n    //  setUser({ user: \"\", token: \"\", authenticated: false });\r\n  };\r\n\r\n  const handleExpandClick = (e:any) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <React.Fragment>\r\n        {\r\n          loggedIn ? (\r\n            <div className={classes.root}>\r\n              <AppBar position=\"static\" className={classes.appbar}>\r\n                <Toolbar>\r\n                  <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Link to=\"/\" className={classes.link}>\r\n                    <Typography variant=\"h6\">\r\n                      Enhanced data display with Material UI\r\n                    </Typography>\r\n                  </Link>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                  </Typography>\r\n                  <div>\r\n                    <Button\r\n                      className={classes.menuButton}\r\n                      color=\"inherit\"\r\n                      aria-label=\"logga ut\"\r\n                      onClick={(e) => handleExpandClick(e)}\r\n                      startIcon={<AccountCircle />}\r\n                      endIcon={<ArrowDropDownIcon />}\r\n                    >\r\n                      test\r\n                    </Button>\r\n                    <Menu\r\n                      id=\"menu-appbar\"\r\n                      anchorEl={anchorEl}\r\n                      anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\",\r\n                      }}\r\n                      keepMounted\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\",\r\n                      }}\r\n                      open={visible}\r\n                      onClose={() => handleClose()}\r\n                    >\r\n                      <MenuItem onClick={() => handleClose()}>\r\n                        <Button\r\n                          startIcon={<AccountCircle />}\r\n                          color=\"inherit\"\r\n                          aria-label=\"om administrationspanelen\"\r\n                        >\r\n                          Profil\r\n                      </Button>\r\n                      </MenuItem>\r\n                      <MenuItem onClick={() => signOut()}>\r\n                        <Button\r\n                          startIcon={<ExitToAppIcon />}\r\n                          color=\"inherit\"\r\n                          aria-label=\"om administrationspanelen\"\r\n                        >\r\n                          Logga ut\r\n                      </Button>\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </div>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          )\r\n            :\r\n            (null)\r\n        }\r\n        <Router />\r\n      </React.Fragment>\r\n    </BrowserRouter>\r\n\r\n  );\r\n};\r\nexport default Navbar;",["307","308"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\Navbar\\Router.tsx",[],["309","310"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\EditableTable.js",["311","312","313","314","315"],"import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Input,\r\n  Paper,\r\n  IconButton,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  selectTableCell: {\r\n    width: 60\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40\r\n  },\r\n  input: {\r\n    width: 130,\r\n    height: 40\r\n  }\r\n}));\r\n\r\n// const createData = (keys) => (\r\n  \r\n  \r\n//   {\r\n//   id: name.replace(\" \", \"_\"),\r\n//   isEditMode: false\r\n// });\r\n\r\nconst CustomTableCell = ({ row, name, onChange }) => {\r\n  const classes = useStyles();\r\n  const { isEditMode } = row;\r\n  return (\r\n    <TableCell align=\"left\" className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          onChange={e => onChange(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nconst EditableTable = (props) => {\r\n  const headers = props.headers || [];\r\n  const [rows, setRows] = React.useState(props.data || []);\r\n  const [previous, setPrevious] = React.useState({});\r\n  const classes = useStyles();\r\n\r\n  const onToggleEditMode = (id) => {\r\n    setRows(state => {\r\n      return rows.map(row => {\r\n        if (row.id === id) {\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const testURL = (str) => {    \r\n    const result = String(str).match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g);\r\n    return result !== null;\r\n    };\r\n\r\n  const createRow = (row) => {\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          Object.keys(row).map((key, index) => {\r\n            const isUrl = testURL(row[key]);\r\n            debugger;\r\n            if (index === 0) {\r\n              return (\r\n                <TableCell component=\"th\" scope=\"row\" key={index}>\r\n                  {!isUrl ? row[key] : <Avatar alt=\"Remy Sharp\" src={row[key]} />}\r\n                </TableCell>\r\n              );\r\n            }\r\n            else {\r\n              return (\r\n                <TableCell align=\"right\" key={index}>\r\n                  {!isUrl ? row[key] : <Avatar alt=\"Remy Sharp\" src={row[key]} />}\r\n                </TableCell>\r\n              );\r\n            }\r\n          })\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.id]) {\r\n      setPrevious(state => ({ ...state, [row.id]: row }));\r\n    }\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { id } = row;\r\n    const newRows = rows.map(row => {\r\n      if (row.id === id) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n\r\n  const onRevert = id => {\r\n    const newRows = rows.map(row => {\r\n      if (row.id === id) {\r\n        return previous[id] ? previous[id] : row;\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n    setPrevious(state => {\r\n      delete state[id];\r\n      return state;\r\n    });\r\n    onToggleEditMode(id);\r\n  };\r\n\r\n  const onDelete = (index) => {\r\n    if(index) {\r\n\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (JSON.stringify(props.rows) !== JSON.stringify(rows)) {\r\n      const newState = JSON.parse(JSON.stringify(props.rows))\r\n      setRows(newState);\r\n    }\r\n  }, [rows, props.rows]);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\" />\r\n            {\r\n              headers.map((header) => {\r\n                return  <TableCell align=\"left\">{header}</TableCell>\r\n              })\r\n            }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell className={classes.selectTableCell}>\r\n                {row.isEditMode ? (\r\n                  <React.Fragment>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      aria-label=\"done\"\r\n                      onClick={() => onToggleEditMode(row.id)}\r\n                    >\r\n                      <DoneIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      aria-label=\"revert\"\r\n                      onClick={() => onRevert(row.id)}\r\n                    >\r\n                      <RevertIcon />\r\n                    </IconButton>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"edit\"\r\n                    onClick={() => onToggleEditMode(row.id)}\r\n                  >\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                )}\r\n              </TableCell>\r\n              {\r\n\r\n              }\r\n              {/* <CustomTableCell {...{ row, name: \"name\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"calories\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"fat\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"carbs\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"protein\", onChange }} /> */}\r\n              <TableCell>\r\n                <IconButton>\r\n                  <DeleteIcon\r\n                  onClick={() => onDelete(index)}\r\n                    color=\"primary\"\r\n                    aria-label=\"delete\"\r\n                  />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EditableTable;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\pages\\Home\\Home.tsx",["316","317"],"import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport allActions from '../../../redux/actions/index';\r\nimport { makeStyles, Theme, Container, Typography, Grid } from '@material-ui/core';\r\nimport CardLink from './CardLink';\r\nimport api from '../../../api';\r\nimport { RootState } from \"../../../redux/reducers/index\";\r\nimport Settings from \"./settings.json\";\r\nimport \"./style.css\";\r\n\r\nconst useStyles = makeStyles((theme:Theme) => ({\r\n    root: {\r\n        marginTop: '3em',\r\n        backgroundColor: 'white',\r\n        padding: '1em',\r\n    },\r\n    container: {\r\n     \r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: theme.spacing(1)\r\n    },\r\n    gridListContainer: {\r\n        padding: 0,\r\n        margin: 0,\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: 'black'\r\n    },\r\n    gridListTile: {\r\n        padding: 0,\r\n        margin: 0,\r\n        width: '50% !important',\r\n        height: '50% !important'\r\n    },\r\n    gridListCard: {\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst Home = () => {\r\n\r\n    const classes = useStyles();\r\n    const cardImg = require('./test.png').default;\r\n    const links = [\r\n        { title: 'Simple Table', description: 'A simple table with filter and sort functionality', img: cardImg, link:\"/basicexample\"},\r\n        { title: 'Editable table', description: 'A table with standard functions and with editable rows and columns', img: cardImg, link:\"/EditableExample\"},\r\n        { title: 'Custom mail', description: 'A table suitable for an application with custom mail functionality', img: cardImg, link:\"/basicexample\" },\r\n        { title: 'Draggable Table', description: 'A draggable table with crud functionality', img: cardImg, link:\"/draggableexample\"},\r\n        { title:'Map application', description: 'An example on how table can be used in map applications', img: cardImg, link:\"/basicexample\" },\r\n        { title: 'table with statistics', description: 'A table with charts and statistical tools', img: cardImg, link:\"/statisticsexample\"}\r\n    ];\r\n   const data = useSelector((state:RootState) => { \r\n       return state.currentData; \r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getData = React.useCallback(async() => {\r\n        const data = await api.getData();\r\n        if(data) {\r\n            dispatch(allActions.dataActions.setData(data));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {       \r\n        getData();\r\n    }, [getData]);\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Typography variant=\"h4\">Exempel</Typography>\r\n            <Grid container spacing={3} className={classes.container}>\r\n                {\r\n                    links.map((link) => {\r\n                        return (\r\n                            <Grid item xs={6}>\r\n                                <CardLink link={link} />\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\nexport default Home;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\EditableExample.tsx",["318","319"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Container, Typography } from '@material-ui/core';\r\nimport EditableTable from '../tables/EditableTable';\r\nimport Querybar from '../querybar/Querybar';\r\nimport settings from './settings';\r\nimport {useSelector } from 'react-redux';\r\nimport allActions from '../../redux/actions/index';\r\n\r\n\r\nconst placeholder = 'Search...';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginTop: '1em',\r\n        minHeight: '82vh'\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst BasicExample = () => {\r\n    const classes = useStyles();\r\n    const currentData = useSelector((state:any) => state.currentData)\r\n    const [rows, setRows] = useState(currentData.data);\r\n    const [data, setData] = useState(currentData.data);\r\n    debugger;\r\n    const updateData = () => {\r\n        return currentData.data;\r\n    };\r\n\r\n    const handleDelete = () =>{\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(rows);\r\n    }, [rows]);\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Typography>Editable Example</Typography>\r\n            <br />\r\n            <Querybar\r\n                headers={settings.headers}\r\n                sort={settings.sort}\r\n                data={data}\r\n                updateData={updateData}\r\n                filters={settings.filters}\r\n                setData={setRows}\r\n                placeholder={placeholder}\r\n                useSort={settings.useSort || true} \r\n                showSearchResultText={settings.showSearchResultText || true}\r\n                showDelete={true}\r\n                handleDelete={handleDelete}\r\n                />\r\n           <EditableTable\r\n             title={\"name\"}\r\n             headers={Object.keys(currentData.data[0])}\r\n             rows={rows}\r\n           />\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default BasicExample;","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\BasicTable.tsx",["320","321","322","323","324","325","326","327","328","329"],"C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\examples\\settings.ts",["330"],"const data = [\r\n    { name: 'John Doe', gender: 'male', state: 'Delaware', age: '23', born: '2012-01-03', year: '2010' },\r\n    { name: 'Zach Johnson', state: 'Arkansas', gender: 'male', age: '24', born: '2000-01-03',year: '2011' },\r\n    { name: 'Coby Durant', state: ['Arkansas', 'Maine'], gender: 'other', age: '20', born: '1980-01-03', year: '2019' },\r\n    { name: 'James Dean', state: 'Nebraska', gender: 'male', age: '33',  born: '1980-01-03', year: '2022' },\r\n    {name: 'Peter Jackson', state: 'Arkansas', gender: 'male', age: '58',  born: '1971-01-03', year: '2001'},\r\n    {name: 'Larry Bird', state: 'Arkansas', gender: 'male', age: '65',  born: '1958-01-03', year: '1991'},\r\n    {name: 'Dick Cheney',state: 'Kentucky', gender: 'male', age: '78',  born: '1942-03-03', year: '2001'},\r\n    {name: 'Kamala Harris', state: 'Louisiana', gender: 'female', age: '58',  born: '1962-07-03', year: '2020'},\r\n    {name: 'Mike Pence', state: 'Arkansas', gender: 'male', age: '62',  born: '1958-10-13', year: '2016'}\r\n];\r\n\r\nconst showSearchResultText = true;\r\n\r\nconst useSort = true;\r\n\r\nconst sort = ([\r\n        { name: 'Name (ASC)', key: 'name', order: 'asc', type: 'string' },\r\n        { name: 'Name (Desc)', key: 'name', order: 'desc', type: 'string' },\r\n        { name: 'Age (Asc)', key: 'age', order: 'asc', type: 'string' },\r\n        { name: 'Age (Desc)', key: 'age', order: 'desc', type: 'string' },\r\n      ]);\r\n      \r\nconst headers = [\r\n    { field: \"name\", headerName: \"Namn\" },\r\n    { field: \"age\", headerName: \"Ålder\" },\r\n    { field: \"gender\", headerName: \"Kön\" },\r\n    { field: \"state\", headerName: \"Stat\" },\r\n    { field: \"born\", headerName: \"Födelsedatum\" },\r\n    { field: \"year\", headerName: \"År\" }\r\n];\r\nconst filters = [\r\n    { name: 'status', key: 'status', label: 'status', type: 'radio', data: {values:[{value:'Presumed dead', label: 'Presumed dead'}, {value: 'Alive', label: 'Alive'}, {value: \"Deceased\", label: \"Deceased\"}]} },\r\n    { name: 'age', key: 'age', label: 'Ålder', type: 'range', data: {values: [1, 100]}},\r\n    { name: \"appearance\", key: \"appearance\", label: \"Appearance\", type: 'range', data: {values: [0, 10000]}},\r\n    { name: 'birthday', key: 'birthday', label: 'birthday', type: 'dateRange', data: {values: {start:'1900-01-21', end: '2021-01-20'}}},\r\n    {name: 'category', key: 'category', label: 'Category', type: 'chip', data: {values:[\r\n       \"Breaking bad\",\r\n        \"Better Call Saul\",\r\n    ]\r\n    } }\r\n   // {name: 'Active', key:'active', label: 'Aktiv', type: 'switch', data:{}}\r\n  //  { name: 'Categories', label: 'Kategorier', type: 'select', values: [] }\r\n];\r\n\r\n\r\nexport default({\r\n    data,\r\n    useSort,\r\n    showSearchResultText,\r\n    sort,\r\n    filters,\r\n    headers,\r\n});","C:\\Users\\alev\\Hackaton\\mui-enchanced-datadisplay\\src\\components\\tables\\index.tsx",["331","332"],"import React from \"react\";\r\nimport Details from \"./assets/Dialogs/Details\";\r\nimport BasicTable from \"./BasicTable\";\r\nimport DraggableTable from \"./DraggableTable\";\r\n\r\nenum tableTypes {\r\n    basic = \"basic\",\r\n    draggable = \"draggable\",\r\n    mail = \"mail\",\r\n};\r\ntype tableProps = {\r\n    data: Array<any>;\r\n    headers: Array<string>;\r\n    type?: tableTypes;\r\n    title?: string;\r\n    updateData?: (data:Array<any>)=>void;\r\n};\r\n\r\nconst Table: React.FC<tableProps> = (props) => {\r\n\r\n    const [data, setData] = React.useState<any[]>(props.data || []);\r\n    const [selectedRow, setSelectedRow] = React.useState<any>({});\r\n    const title = props.title || \"\";\r\n    const [details, showDetails] = React.useState<boolean>(false);\r\n\r\n    const handleDetails = (row: any, title?: string) => {\r\n        if(title) {\r\n            row.title = title;\r\n        }\r\n        setSelectedRow(row);\r\n        showDetails(true);\r\n      };\r\n  \r\n      const setTable = () => {\r\n        switch(props.type) {\r\n            case tableTypes.basic:\r\n                return  <BasicTable\r\n                title={props.title || \"Table\"}\r\n                headers={props.headers}\r\n                rows={props.data}\r\n                showDetails={handleDetails}\r\n                setRows={setData} />;\r\n            case tableTypes.draggable:\r\n                return  <DraggableTable\r\n                title={props.title || \"Table\"}\r\n                headers={props.headers}\r\n                rows={props.data}\r\n                showDetails={handleDetails}\r\n                setRows={setData} />;\r\n            case tableTypes.mail:\r\n                return  <BasicTable\r\n                title={props.title || \"Table\"}\r\n                headers={props.headers}\r\n                rows={props.data}\r\n                showDetails={handleDetails}\r\n                setRows={setData} />;\r\n            default:\r\n                return  <BasicTable\r\n                title={props.title || \"Table\"}\r\n                headers={props.headers}\r\n                rows={props.data}\r\n                showDetails={handleDetails}\r\n                setRows={setData} />;\r\n        }\r\n      };\r\n\r\n      React.useEffect(() => {\r\n\r\n      }, [props, details]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n               setTable()\r\n            }\r\n              {\r\n        details && selectedRow !== null ?\r\n          (<Details\r\n            title={selectedRow.title ? selectedRow.title : \"\" }\r\n            data={selectedRow}\r\n            setOpen={showDetails}\r\n          />)\r\n          : (null)\r\n      }\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Table;",{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","severity":1,"message":"338","line":15,"column":18,"nodeType":"339","messageId":"340","endLine":15,"endColumn":25},{"ruleId":"337","severity":1,"message":"341","line":16,"column":22,"nodeType":"339","messageId":"340","endLine":16,"endColumn":33},{"ruleId":"337","severity":1,"message":"342","line":17,"column":21,"nodeType":"339","messageId":"340","endLine":17,"endColumn":31},{"ruleId":"337","severity":1,"message":"343","line":24,"column":21,"nodeType":"339","messageId":"340","endLine":24,"endColumn":24},{"ruleId":"344","severity":1,"message":"345","line":26,"column":32,"nodeType":"346","messageId":"347","endLine":26,"endColumn":34},{"ruleId":"333","replacedBy":"348"},{"ruleId":"335","replacedBy":"349"},{"ruleId":"337","severity":1,"message":"350","line":1,"column":16,"nodeType":"339","messageId":"340","endLine":1,"endColumn":24},{"ruleId":"351","severity":1,"message":"352","line":16,"column":11,"nodeType":"353","endLine":16,"endColumn":43},{"ruleId":"333","replacedBy":"354"},{"ruleId":"335","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"357","line":7,"column":8,"nodeType":"339","messageId":"340","endLine":7,"endColumn":18},{"ruleId":"356","severity":1,"message":"338","line":26,"column":18,"nodeType":"339","messageId":"340","endLine":26,"endColumn":25},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"356","severity":1,"message":"358","line":2,"column":33,"nodeType":"339","messageId":"340","endLine":2,"endColumn":43},{"ruleId":"356","severity":1,"message":"359","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":16},{"ruleId":"356","severity":1,"message":"357","line":5,"column":8,"nodeType":"339","messageId":"340","endLine":5,"endColumn":18},{"ruleId":"356","severity":1,"message":"360","line":7,"column":8,"nodeType":"339","messageId":"340","endLine":7,"endColumn":21},{"ruleId":"356","severity":1,"message":"361","line":12,"column":7,"nodeType":"339","messageId":"340","endLine":12,"endColumn":18},{"ruleId":"356","severity":1,"message":"362","line":27,"column":18,"nodeType":"339","messageId":"340","endLine":27,"endColumn":25},{"ruleId":"356","severity":1,"message":"363","line":28,"column":12,"nodeType":"339","messageId":"340","endLine":28,"endColumn":16},{"ruleId":"356","severity":1,"message":"338","line":28,"column":18,"nodeType":"339","messageId":"340","endLine":28,"endColumn":25},{"ruleId":"356","severity":1,"message":"364","line":29,"column":11,"nodeType":"339","messageId":"340","endLine":29,"endColumn":21},{"ruleId":"356","severity":1,"message":"365","line":33,"column":11,"nodeType":"339","messageId":"340","endLine":33,"endColumn":23},{"ruleId":"356","severity":1,"message":"366","line":47,"column":11,"nodeType":"339","messageId":"340","endLine":47,"endColumn":25},{"ruleId":"367","severity":1,"message":"368","line":34,"column":1,"nodeType":"369","endLine":37,"endColumn":4},{"ruleId":"356","severity":1,"message":"350","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":35},{"ruleId":"356","severity":1,"message":"370","line":1,"column":48,"nodeType":"339","messageId":"340","endLine":1,"endColumn":59},{"ruleId":"356","severity":1,"message":"371","line":21,"column":11,"nodeType":"339","messageId":"340","endLine":21,"endColumn":21},{"ruleId":"337","severity":1,"message":"350","line":1,"column":16,"nodeType":"339","messageId":"340","endLine":1,"endColumn":24},{"ruleId":"356","severity":1,"message":"370","line":2,"column":17,"nodeType":"339","messageId":"340","endLine":2,"endColumn":28},{"ruleId":"356","severity":1,"message":"350","line":2,"column":30,"nodeType":"339","messageId":"340","endLine":2,"endColumn":38},{"ruleId":"356","severity":1,"message":"338","line":36,"column":17,"nodeType":"339","messageId":"340","endLine":36,"endColumn":24},{"ruleId":"367","severity":1,"message":"368","line":14,"column":1,"nodeType":"369","endLine":17,"endColumn":2},{"ruleId":"337","severity":1,"message":"350","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"372","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":20},{"ruleId":"337","severity":1,"message":"373","line":17,"column":11,"nodeType":"339","messageId":"340","endLine":17,"endColumn":21},{"ruleId":"351","severity":1,"message":"374","line":20,"column":9,"nodeType":"375","endLine":20,"endColumn":30},{"ruleId":"333","replacedBy":"354"},{"ruleId":"335","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"376","line":77,"column":18,"nodeType":"339","messageId":"340","endLine":77,"endColumn":27},{"ruleId":"356","severity":1,"message":"377","line":134,"column":10,"nodeType":"339","messageId":"340","endLine":134,"endColumn":19},{"ruleId":"351","severity":1,"message":"378","line":137,"column":9,"nodeType":"353","endLine":137,"endColumn":39},{"ruleId":"356","severity":1,"message":"379","line":205,"column":9,"nodeType":"339","messageId":"340","endLine":205,"endColumn":26},{"ruleId":"344","severity":1,"message":"380","line":283,"column":88,"nodeType":"346","messageId":"381","endLine":283,"endColumn":90},{"ruleId":"344","severity":1,"message":"382","line":339,"column":44,"nodeType":"346","messageId":"381","endLine":339,"endColumn":46},{"ruleId":"356","severity":1,"message":"343","line":356,"column":19,"nodeType":"339","messageId":"340","endLine":356,"endColumn":22},{"ruleId":"344","severity":1,"message":"345","line":358,"column":28,"nodeType":"346","messageId":"347","endLine":358,"endColumn":30},{"ruleId":"367","severity":1,"message":"368","line":13,"column":1,"nodeType":"369","endLine":16,"endColumn":2},{"ruleId":"333","replacedBy":"383"},{"ruleId":"335","replacedBy":"384"},{"ruleId":"356","severity":1,"message":"385","line":66,"column":11,"nodeType":"339","messageId":"340","endLine":66,"endColumn":15},{"ruleId":"351","severity":1,"message":"386","line":68,"column":11,"nodeType":"353","endLine":68,"endColumn":43},{"ruleId":"333","replacedBy":"387"},{"ruleId":"335","replacedBy":"388"},{"ruleId":"389","severity":1,"message":"390","line":5,"column":80,"nodeType":"391","messageId":"392","endLine":5,"endColumn":81,"suggestions":"393"},{"ruleId":"389","severity":1,"message":"390","line":5,"column":123,"nodeType":"391","messageId":"392","endLine":5,"endColumn":124,"suggestions":"394"},{"ruleId":"356","severity":1,"message":"395","line":66,"column":11,"nodeType":"339","messageId":"340","endLine":66,"endColumn":21},{"ruleId":"351","severity":1,"message":"396","line":99,"column":11,"nodeType":"353","endLine":99,"endColumn":40},{"ruleId":"333","replacedBy":"397"},{"ruleId":"335","replacedBy":"398"},{"ruleId":"356","severity":1,"message":"363","line":22,"column":12,"nodeType":"339","messageId":"340","endLine":22,"endColumn":16},{"ruleId":"356","severity":1,"message":"338","line":22,"column":18,"nodeType":"339","messageId":"340","endLine":22,"endColumn":25},{"ruleId":"333","replacedBy":"399"},{"ruleId":"335","replacedBy":"400"},{"ruleId":"337","severity":1,"message":"350","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"401","line":4,"column":5,"nodeType":"339","messageId":"340","endLine":4,"endColumn":13},{"ruleId":"356","severity":1,"message":"402","line":5,"column":5,"nodeType":"339","messageId":"340","endLine":5,"endColumn":10},{"ruleId":"356","severity":1,"message":"403","line":6,"column":5,"nodeType":"339","messageId":"340","endLine":6,"endColumn":17},{"ruleId":"351","severity":1,"message":"404","line":131,"column":8,"nodeType":"405","endLine":131,"endColumn":62,"suggestions":"406"},{"ruleId":"351","severity":1,"message":"407","line":131,"column":9,"nodeType":"375","endLine":131,"endColumn":46},{"ruleId":"356","severity":1,"message":"408","line":8,"column":5,"nodeType":"339","messageId":"340","endLine":8,"endColumn":9},{"ruleId":"356","severity":1,"message":"409","line":9,"column":5,"nodeType":"339","messageId":"340","endLine":9,"endColumn":13},{"ruleId":"356","severity":1,"message":"410","line":10,"column":5,"nodeType":"339","messageId":"340","endLine":10,"endColumn":17},{"ruleId":"356","severity":1,"message":"411","line":30,"column":8,"nodeType":"339","messageId":"340","endLine":30,"endColumn":11},{"ruleId":"356","severity":1,"message":"357","line":7,"column":8,"nodeType":"339","messageId":"340","endLine":7,"endColumn":18},{"ruleId":"356","severity":1,"message":"338","line":31,"column":18,"nodeType":"339","messageId":"340","endLine":31,"endColumn":25},{"ruleId":"333","replacedBy":"383"},{"ruleId":"335","replacedBy":"384"},{"ruleId":"356","severity":1,"message":"412","line":35,"column":20,"nodeType":"339","messageId":"340","endLine":35,"endColumn":31},{"ruleId":"356","severity":1,"message":"413","line":36,"column":10,"nodeType":"339","messageId":"340","endLine":36,"endColumn":14},{"ruleId":"356","severity":1,"message":"414","line":36,"column":16,"nodeType":"339","messageId":"340","endLine":36,"endColumn":23},{"ruleId":"356","severity":1,"message":"415","line":41,"column":9,"nodeType":"339","messageId":"340","endLine":41,"endColumn":25},{"ruleId":"356","severity":1,"message":"416","line":45,"column":9,"nodeType":"339","messageId":"340","endLine":45,"endColumn":26},{"ruleId":"333","replacedBy":"417"},{"ruleId":"335","replacedBy":"418"},{"ruleId":"333","replacedBy":"419"},{"ruleId":"335","replacedBy":"420"},{"ruleId":"337","severity":1,"message":"421","line":49,"column":7,"nodeType":"339","messageId":"340","endLine":49,"endColumn":22},{"ruleId":"389","severity":1,"message":"390","line":86,"column":80,"nodeType":"391","messageId":"392","endLine":86,"endColumn":81,"suggestions":"422"},{"ruleId":"389","severity":1,"message":"390","line":86,"column":123,"nodeType":"391","messageId":"392","endLine":86,"endColumn":124,"suggestions":"423"},{"ruleId":"337","severity":1,"message":"424","line":90,"column":9,"nodeType":"339","messageId":"340","endLine":90,"endColumn":18},{"ruleId":"337","severity":1,"message":"425","line":117,"column":9,"nodeType":"339","messageId":"340","endLine":117,"endColumn":17},{"ruleId":"356","severity":1,"message":"426","line":8,"column":8,"nodeType":"339","messageId":"340","endLine":8,"endColumn":16},{"ruleId":"356","severity":1,"message":"363","line":69,"column":10,"nodeType":"339","messageId":"340","endLine":69,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":7,"column":8,"nodeType":"339","messageId":"340","endLine":7,"endColumn":18},{"ruleId":"356","severity":1,"message":"338","line":26,"column":18,"nodeType":"339","messageId":"340","endLine":26,"endColumn":25},{"ruleId":"356","severity":1,"message":"402","line":4,"column":3,"nodeType":"339","messageId":"340","endLine":4,"endColumn":8},{"ruleId":"356","severity":1,"message":"427","line":41,"column":10,"nodeType":"339","messageId":"340","endLine":41,"endColumn":21},{"ruleId":"356","severity":1,"message":"428","line":41,"column":23,"nodeType":"339","messageId":"340","endLine":41,"endColumn":37},{"ruleId":"356","severity":1,"message":"429","line":42,"column":9,"nodeType":"339","messageId":"340","endLine":42,"endColumn":14},{"ruleId":"356","severity":1,"message":"430","line":43,"column":10,"nodeType":"339","messageId":"340","endLine":43,"endColumn":17},{"ruleId":"356","severity":1,"message":"431","line":43,"column":19,"nodeType":"339","messageId":"340","endLine":43,"endColumn":30},{"ruleId":"356","severity":1,"message":"432","line":67,"column":9,"nodeType":"339","messageId":"340","endLine":67,"endColumn":23},{"ruleId":"356","severity":1,"message":"433","line":71,"column":7,"nodeType":"339","messageId":"340","endLine":71,"endColumn":10},{"ruleId":"389","severity":1,"message":"390","line":80,"column":78,"nodeType":"391","messageId":"392","endLine":80,"endColumn":79,"suggestions":"434"},{"ruleId":"389","severity":1,"message":"390","line":80,"column":121,"nodeType":"391","messageId":"392","endLine":80,"endColumn":122,"suggestions":"435"},{"ruleId":"367","severity":1,"message":"368","line":47,"column":1,"nodeType":"369","endLine":54,"endColumn":4},{"ruleId":"356","severity":1,"message":"363","line":21,"column":12,"nodeType":"339","messageId":"340","endLine":21,"endColumn":16},{"ruleId":"356","severity":1,"message":"429","line":23,"column":11,"nodeType":"339","messageId":"340","endLine":23,"endColumn":16},"no-native-reassign",["436"],"no-negated-in-lhs",["437"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'setFilename' is assigned a value but never used.","'setHeaders' is assigned a value but never used.","'key' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["436"],["437"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","The 'values' logical expression could make the dependencies of useEffect Hook (at line 28) change on every render. To fix this, wrap the initialization of 'values' in its own useMemo() Hook.","VariableDeclarator",["436"],["437"],"@typescript-eslint/no-unused-vars","'allActions' is defined but never used.","'Typography' is defined but never used.","'Querybar' is defined but never used.","'BasicBarChart' is defined but never used.","'placeholder' is assigned a value but never used.","'setRows' is assigned a value but never used.","'data' is assigned a value but never used.","'updateData' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'lineChartProps' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useCallback' is defined but never used.","'uploadData' is assigned a value but never used.","'DeleteButton' is defined but never used.","'showDelete' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'setValues' is assigned a value but never used.","'dataQuery' is assigned a value but never used.","The 'sortOptions' logical expression could make the dependencies of useEffect Hook (at line 418) change on every render. To fix this, wrap the initialization of 'sortOptions' in its own useMemo() Hook.","'nestedArraySearch' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.some() expects a value to be returned at the end of arrow function.",["436"],["437"],"'type' is assigned a value but never used.","The 'values' logical expression could make the dependencies of useEffect Hook (at line 100) change on every render. To fix this, wrap the initialization of 'values' in its own useMemo() Hook.",["436"],["437"],"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["438","439"],["440","441"],"'filterKeys' is defined but never used.","The 'filters' logical expression could make the dependencies of useEffect Hook (at line 179) change on every render. To fix this, wrap the initialization of 'filters' in its own useMemo() Hook.",["436"],["437"],["436"],["437"],"'useTheme' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","React Hook React.useEffect has missing dependencies: 'chipLists' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["442"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'Row' is defined but never used.","'setLoggedIn' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.",["436"],["437"],["436"],["437"],"'CustomTableCell' is assigned a value but never used.",["443","444"],["445","446"],"'createRow' is assigned a value but never used.","'onChange' is assigned a value but never used.","'Settings' is defined but never used.","'selectedRow' is assigned a value but never used.","'setSelectedRow' is assigned a value but never used.","'title' is assigned a value but never used.","'details' is assigned a value but never used.","'showDetails' is assigned a value but never used.","'isValidHttpUrl' is assigned a value but never used.","'url' is assigned a value but never used.",["447","448"],["449","450"],"no-global-assign","no-unsafe-negation",{"messageId":"451","fix":"452","desc":"453"},{"messageId":"454","fix":"455","desc":"456"},{"messageId":"451","fix":"457","desc":"453"},{"messageId":"454","fix":"458","desc":"456"},{"desc":"459","fix":"460"},{"messageId":"451","fix":"461","desc":"453"},{"messageId":"454","fix":"462","desc":"456"},{"messageId":"451","fix":"463","desc":"453"},{"messageId":"454","fix":"464","desc":"456"},{"messageId":"451","fix":"465","desc":"453"},{"messageId":"454","fix":"466","desc":"456"},{"messageId":"451","fix":"467","desc":"453"},{"messageId":"454","fix":"468","desc":"456"},"removeEscape",{"range":"469","text":"470"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"471","text":"472"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"473","text":"470"},{"range":"474","text":"472"},"Update the dependencies array to be: [activeFilters, chipLists, props]",{"range":"475","text":"476"},{"range":"477","text":"470"},{"range":"478","text":"472"},{"range":"479","text":"470"},{"range":"480","text":"472"},{"range":"481","text":"470"},{"range":"482","text":"472"},{"range":"483","text":"470"},{"range":"484","text":"472"},[178,179],"",[178,178],"\\",[221,222],[221,221],[4185,4239],"[activeFilters, chipLists, props]",[1909,1910],[1909,1909],[1952,1953],[1952,1952],[1984,1985],[1984,1984],[2027,2028],[2027,2027]]